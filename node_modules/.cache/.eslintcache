[{"D:\\01ReactProjects\\gktconnect-react-chat\\src\\index.js":"1","D:\\01ReactProjects\\gktconnect-react-chat\\src\\App.js":"2","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\NavBar.js":"3","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\ChatBox.js":"4","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\Welcome.js":"5","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\Message.js":"6","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\SendMessage.js":"7","D:\\01ReactProjects\\gktconnect-react-chat\\src\\firebase.js":"8"},{"size":232,"mtime":1673778396000,"results":"9","hashOfConfig":"10"},{"size":529,"mtime":1677002460181,"results":"11","hashOfConfig":"10"},{"size":979,"mtime":1677006264419,"results":"12","hashOfConfig":"10"},{"size":1020,"mtime":1677006800865,"results":"13","hashOfConfig":"10"},{"size":824,"mtime":1677007489646,"results":"14","hashOfConfig":"10"},{"size":609,"mtime":1677006500780,"results":"15","hashOfConfig":"10"},{"size":1247,"mtime":1677006573414,"results":"16","hashOfConfig":"10"},{"size":1031,"mtime":1677002701147,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s6ukv7",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"D:\\01ReactProjects\\gktconnect-react-chat\\src\\index.js",[],[],"D:\\01ReactProjects\\gktconnect-react-chat\\src\\App.js",["46"],[],"import \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport ChatBox from \"./components/ChatBox\";\nimport Welcome from \"./components/Welcome\";\nimport { useState } from \"react\";\nimport { auth } from \"./firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      {!user ? (\n        <Welcome />\n      ) : (\n        <>\n          <ChatBox />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\NavBar.js",["47"],[],"import { auth } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { GoogleAuthProvider, signInWithRedirect } from \"firebase/auth\";\nimport { useState } from \"react\";\nimport GoogleSignin from \"../img/btn_google_signin_dark_pressed_web.png\";\n\nconst NavBar = () => {\n  const [user] = useAuthState(auth);\n\n  const googleSignIn = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithRedirect(auth, provider);\n  };\n\n  const signOut = () => {\n    auth.signOut();\n  };\n\n  return (\n    <nav className=\"nav-bar\">\n      <h1>React Chat</h1>\n      {user ? (\n        <button onClick={signOut} className=\"sign-out\" type=\"button\">\n          Sign Out\n        </button>\n      ) : (\n        <button className=\"sign-in\">\n          <img\n            onClick={googleSignIn}\n            src={GoogleSignin}\n            alt=\"sign in with google\"\n            type=\"button\"\n          />\n        </button>\n      )}\n    </nav>\n  );\n};\n\nexport default NavBar;\n","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\ChatBox.js",["48"],[],"import React from \"react\";\nimport Message from \"./Message\";\nimport SendMessage from \"./SendMessage\";\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  query,\n  collection,\n  orderBy,\n  onSnapshot,\n  limit,\n} from \"firebase/firestore\";\nimport { db } from \"../firebase\";\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  \n  useEffect(() => {\n    const q = query(\n      collection(db, \"messages\"),\n      orderBy(\"createdAt\"),\n      limit(50)\n    );\n    const unsubscribe = onSnapshot(q, (QuerySnapshot) => {\n      let messages = [];\n      QuerySnapshot.forEach((doc) => {\n        messages.push({ ...doc.data(), id: doc.id });\n      });\n      setMessages(messages);\n    });\n    return () => unsubscribe;\n  }, []);\n\n  return (\n    <main className=\"chat-box\">\n      <div className=\"messages-wrapper\">\n        {messages?.map((message) => (\n          <Message key={message.id} message={message} />\n        ))}\n      </div>\n      <SendMessage />\n    </main>\n  );\n};\nexport default ChatBox;\n","D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\Welcome.js",[],[],"D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\Message.js",[],[],"D:\\01ReactProjects\\gktconnect-react-chat\\src\\components\\SendMessage.js",[],[],"D:\\01ReactProjects\\gktconnect-react-chat\\src\\firebase.js",["49"],[],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA8LGJbUEf5aYvuevMlS-sMTXSlIpXgGRQ\",\r\n  authDomain: \"gktconnect-react-chat.firebaseapp.com\",\r\n  projectId: \"gktconnect-react-chat\",\r\n  storageBucket: \"gktconnect-react-chat.appspot.com\",\r\n  messagingSenderId: \"318715542469\",\r\n  appId: \"1:318715542469:web:eddb85dd3662d117f229ac\",\r\n  measurementId: \"G-TCER1GZCS6\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);",{"ruleId":"50","severity":1,"message":"51","line":5,"column":10,"nodeType":"52","messageId":"53","endLine":5,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"50","severity":1,"message":"54","line":4,"column":21,"nodeType":"52","messageId":"53","endLine":4,"endColumn":27},{"ruleId":"50","severity":1,"message":"55","line":23,"column":7,"nodeType":"52","messageId":"53","endLine":23,"endColumn":16},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'analytics' is assigned a value but never used."]