{"ast":null,"code":"var _jsxFileName = \"D:\\\\01ReactProjects\\\\gktconnect-react-chat\\\\src\\\\components\\\\SendMessage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scroll = useRef();\nconst SendMessage = _ref => {\n  _s();\n  let {\n    scroll\n  } = _ref;\n  const [message, setMessage] = useState(\"\");\n  const sendMessage = async event => {\n    event.preventDefault();\n    if (message.trim() === \"\") {\n      alert(\"Enter valid message\");\n      return;\n    }\n    const {\n      uid,\n      displayName,\n      photoURL\n    } = auth.currentUser;\n    await addDoc(collection(db, \"messages\"), {\n      text: message,\n      name: displayName,\n      avatar: photoURL,\n      createdAt: serverTimestamp(),\n      uid\n    });\n    setMessage(\"\");\n    scroll.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => sendMessage(event),\n    className: \"send-message\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"messageInput\",\n      hidden: true,\n      children: \"Enter Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"messageInput\",\n      name: \"messageInput\",\n      type: \"text\",\n      className: \"form-input__input\",\n      placeholder: \"type message...\",\n      value: message,\n      onChange: e => setMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SendMessage, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = SendMessage;\nexport default SendMessage;\nvar _c;\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"names":["React","useState","auth","db","addDoc","collection","serverTimestamp","jsxDEV","_jsxDEV","scroll","useRef","SendMessage","_ref","_s","message","setMessage","sendMessage","event","preventDefault","trim","alert","uid","displayName","photoURL","currentUser","text","name","avatar","createdAt","current","scrollIntoView","behavior","onSubmit","className","children","htmlFor","hidden","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/01ReactProjects/gktconnect-react-chat/src/components/SendMessage.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { auth, db } from \"../firebase\";\nimport { addDoc, collection, serverTimestamp } from \"firebase/firestore\";\n\nconst scroll = useRef();\nconst SendMessage = ({ scroll }) => {\n\n  const [message, setMessage] = useState(\"\");\n  const sendMessage = async (event) => {\n    event.preventDefault();\n    if (message.trim() === \"\") {\n      alert(\"Enter valid message\");\n      return;\n    }\n    const { uid, displayName, photoURL } = auth.currentUser;\n    await addDoc(collection(db, \"messages\"), {\n      text: message,\n      name: displayName,\n      avatar: photoURL,\n      createdAt: serverTimestamp(),\n      uid,\n    });\n    setMessage(\"\");\n    scroll.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n\n  return (\n    <form onSubmit={(event) => sendMessage(event)} className=\"send-message\">\n      <label htmlFor=\"messageInput\" hidden>\n        Enter Message\n      </label>\n      <input\n        id=\"messageInput\"\n        name=\"messageInput\"\n        type=\"text\"\n        className=\"form-input__input\"\n        placeholder=\"type message...\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n      />\n      <button type=\"submit\">Send</button>\n    </form>\n  );\n};\n\nexport default SendMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,EAAE,QAAQ,aAAa;AACtC,SAASC,MAAM,EAAEC,UAAU,EAAEC,eAAe,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,MAAM,GAAGC,MAAM,EAAE;AACvB,MAAMC,WAAW,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEJ;EAAO,CAAC,GAAAG,IAAA;EAE7B,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMe,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIJ,OAAO,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;MACzBC,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF;IACA,MAAM;MAAEC,GAAG;MAAEC,WAAW;MAAEC;IAAS,CAAC,GAAGrB,IAAI,CAACsB,WAAW;IACvD,MAAMpB,MAAM,CAACC,UAAU,CAACF,EAAE,EAAE,UAAU,CAAC,EAAE;MACvCsB,IAAI,EAAEX,OAAO;MACbY,IAAI,EAAEJ,WAAW;MACjBK,MAAM,EAAEJ,QAAQ;MAChBK,SAAS,EAAEtB,eAAe,EAAE;MAC5Be;IACF,CAAC,CAAC;IACFN,UAAU,CAAC,EAAE,CAAC;IACdN,MAAM,CAACoB,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EACvD,CAAC;EAGD,oBACEvB,OAAA;IAAMwB,QAAQ,EAAGf,KAAK,IAAKD,WAAW,CAACC,KAAK,CAAE;IAACgB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBACrE1B,OAAA;MAAO2B,OAAO,EAAC,cAAc;MAACC,MAAM;MAAAF,QAAA,EAAC;IAErC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACRhC,OAAA;MACEiC,EAAE,EAAC,cAAc;MACjBf,IAAI,EAAC,cAAc;MACnBgB,IAAI,EAAC,MAAM;MACXT,SAAS,EAAC,mBAAmB;MAC7BU,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAE9B,OAAQ;MACf+B,QAAQ,EAAGC,CAAC,IAAK/B,UAAU,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC5C,eACFhC,OAAA;MAAQkC,IAAI,EAAC,QAAQ;MAAAR,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC9B;AAEX,CAAC;AAAC3B,EAAA,CAvCIF,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}